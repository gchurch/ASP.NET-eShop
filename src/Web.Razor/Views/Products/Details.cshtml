@model ApplicationCore.Models.Product

@{
    ViewData["Title"] = "Details";
}

@section Style {
    <link rel="stylesheet" href="/css/details.css" />
}

<div id="product">
    <div>
        <div class="productColumn" id="productImage">
            <img src="/images/@Html.DisplayFor(model => model.ImageUrl)" />
        </div>
        <div class="productColumn" id="productInfo">
            <p id="productTitle">
                @Html.DisplayFor(model => model.Title)
            </p>

            <p id="productPrice">
                Price: <span>£@Html.DisplayFor(model => model.Price)</span>
            </p>

            <p id="productQuantity">
                @Html.DisplayFor(model => model.Quantity) <span>in stock</span>
            </p>

            <p id="productDescription">
                <span>About this product</span><br />
                @Html.DisplayFor(model => model.Description)
            </p>

            <p id="productSeller">
                Seller: <span>@Html.DisplayFor(model => model.Seller)</span>
            </p>
        </div>
    </div>
</div>

@if (User.Identity.IsAuthenticated && (await AuthorizationService.AuthorizeAsync(User, Model, ProductOperations.Update)).Succeeded)
{
    <p><a asp-action="Edit" asp-route-id="@Model.ProductId">Edit</a></p>
}
@if (User.Identity.IsAuthenticated && (await AuthorizationService.AuthorizeAsync(User, Model, ProductOperations.Delete)).Succeeded)
{
    <p><a asp-action="Delete" asp-route-id="@Model.ProductId">Delete</a></p>
}

@if (User.Identity.IsAuthenticated)
{
    <button type="button" onclick="AddProductToBasket(@Model.ProductId)">Add to basket</button>
}